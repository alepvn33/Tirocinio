

# This file was *autogenerated* from the file test_MPC.sage
from sage.all_cmdline import *   # import sage library

_sage_const_31 = Integer(31); _sage_const_256 = Integer(256); _sage_const_204 = Integer(204); _sage_const_10 = Integer(10); _sage_const_128 = Integer(128); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1)
reset();

import hashlib;
import numpy;
load('MPC_utils.sage')

#Scheme parameters
q = _sage_const_31 ; #Select prime integer q (size of the field)
n = _sage_const_256 ;
r = _sage_const_204 ;
w = _sage_const_10 ; #Private key weight
_lambda = _sage_const_128  #Seed bit lenght

#Preparations to execute the protocol
Fq=GF(q); #finite field with q elements
Fq_set = Set(Fq);
Fq_star = Fq_set.difference([_sage_const_0 ]); #multiplicative group of Fq

#Key generation
e, Htr_unsys, s = key_gen(Fq,n,r,w);

#MPC-in-the-head identification
ok = MPC_id(e,Htr_unsys,s);
if ok==_sage_const_1 :
    print("Id ACCEPTED!");
else:
    print("Id REJECTED!");

