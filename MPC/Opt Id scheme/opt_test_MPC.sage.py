

# This file was *autogenerated* from the file opt_test_MPC.sage
from sage.all_cmdline import *   # import sage library

_sage_const_31 = Integer(31); _sage_const_256 = Integer(256); _sage_const_204 = Integer(204); _sage_const_10 = Integer(10); _sage_const_128 = Integer(128); _sage_const_100 = Integer(100); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1)
reset();

import hashlib
import numpy
load('opt_MPC_utils.sage')
load('merkletools.sage')

#Scheme parameters
q = _sage_const_31 ; #Select prime integer q (size of the field)
n = _sage_const_256 ;
r = _sage_const_204 ;
w = _sage_const_10 ; #Private key weight
_lambda = _sage_const_128  #Seed bit lenght
N = _sage_const_100  #Number of instances

#Preparations to execute the protocol
Fq=GF(q); #finite field with q elements
Fq_set = Set(Fq);
Fq_star = Fq_set.difference([_sage_const_0 ]); #multiplicative group of Fq

#Key generation
e, Htr_unsys, s = key_gen();

#MPC-in-the-head identification
ok = MPC_id(e,Htr_unsys,s);
if ok==_sage_const_1 :
    print(Bcolors.BOLD+Bcolors.UNDERLINE+Bcolors.OKGREEN+"\nId ACCEPTED!\n"+Bcolors.ENDC+Bcolors.ENDC);
else:
    print(Bcolors.BOLD+Bcolors.UNDERLINE+Bcolors.FAIL+"\nId REJECTED!\n"+Bcolors.ENDC+Bcolors.ENDC);

